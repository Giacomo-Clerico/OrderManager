services:
  db:
    image: postgres:15
    container_name: db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-user.sql:/docker-entrypoint-initdb.d/init-user.sql
    command: "postgres -c 'max_connections=500'"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    user: postgres

  web:
    build: .
    command: bash -c "bundle exec rails tailwindcss:build && ./bin/rails server"
    environment:
      - RAILS_ENV=${RAILS_ENV}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - RAILS_MASTER_KEY=${RAILS_MASTER_KEY}
      - EXCHANGE_RATE_API_KEY=${EXCHANGE_RATE_API_KEY}
    volumes:
      - app-storage:/rails/storage
      - ./public:/rails/public
    depends_on:
      - db
    ports:
      - "3000:3000"

  backup:
    build:
      context: ./db-backup
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - TZ=Africa/Lusaka
    volumes:
      - ./backups:/backups
    depends_on:
      - db

volumes:
  postgres_data: {}
  app-storage: {}

networks:
  default:
