<% order = @order %>
<div class="border-b border-gray-200 py-3">
    <h2 class="text-xl font-bold"><%= order.name%></h2>
    <div class="flex items-center justify-start  gap-x-4">
        <p>Created by: <%= order.user.email.split("@").first %> at <%= order.created_at.strftime("%d/%m/%Y %H:%M") %></p>
        <% unless order.checked_at.nil? %>
            <% if order.checked %>
                <p>Checked by: <%= order.checked_by.email.split("@").first %> at <%= order.checked_at.strftime("%d/%m/%Y %H:%M") %></p>
            <% else %>
                <h1> Order was refused by <%= order.checked_by.email.split("@").first %> at <%= order.checked_at.strftime("%d/%m/%Y %H:%M") %></h1>
            <% end %>
        <% end %>
        <% unless order.quotes_submitted_by_id.nil? %>
            <p>Quotes submitted by: <%= order.quotes_submitted_by.email.split("@").first %> at <%= order.quotes_submitted_at.strftime("%d/%m/%Y %H:%M") %></p>

        <% end %>
    </div>
    <% unless order.quotes_submitted_by_id.nil? %>
        <p>Order status: 
        <% if order.approved.nil? %>
            <span class="text-yellow-500">Pending</span>
        <% else %>
            <%= order.approved.capitalize %> by <%= order.approved_by.email.split("@").first %> at <%= order.approved_at.strftime("%d/%m/%Y %H:%M") if order.approved_at %>
        <% end %>
        </p>
    <% end %>
    <div class="my-5">
        <%= order.description %>
    </div>
    <% if order.checked_at.nil? %>
    <%# buttons to pass or refuse technical check%>
    <div class="flex items-center justify-start gap-x-4 mt-4">
        <%= button_to "Check Order", check_order_path(@order), method: :patch, class: "bg-blue-500 text-white px-3 py-1 mt-4 rounded" %>
        <%= button_to "Refuse Order", refuse_order_path(@order), method: :patch, class: "bg-blue-500 text-white px-3 py-1 mt-4 rounded" %>
    </div>
    <% elsif order.checked %>
    <%# if the order has been thecnically approved, show quotes and items below%>
        <h1 class="font-semibold text-lg mt-6">Quote Details</h1>
        <div class="flex flex-wrap gap-4 mt-4">
            <% order.quotes.each do |quote| %>
            <% if quote.items.where(selected: true).exists? && order.approved == "approved"%>
            <div class="border border-gray-300 rounded-lg p-5">
                <p>
                    <strong>Company:</strong>
                    <%= link_to quote.company, order_quote_path(@order, quote) %>
                </p>
                <p>
                    <strong>Company Address:</strong>
                    <%= quote.company_address %>
                </p>
                <div>
                    <strong>Body:</strong>
                    <div class="border-1 border-black rounded-lg p-2 my-2 inline-block">
                        <%= quote.body %>
                    </div>
                </div>

                <hr>

                <h2>Items:</h2>

                <% if quote.items.any? %>
                    <table class="table-auto border-collapse border border-gray-300">
                    <thead>
                        <tr>
                            <th class="border border-gray-300 px-2 py-1">Name</th>
                            <th class="border border-gray-300 px-2 py-1">Price</th>
                            <th class="border border-gray-300 px-2 py-1">
                                Price (Currency)
                                <select class="currency-select">
                                <option value="USD">USD</option>
                                <option value="ZMW">ZMW</option>
                                </select>
                            </th>
                            <% unless order.approved == "approved" %>
                                <th class="border border-gray-300 px-2 py-1">Recommended</th>
                            <% end %>
                            <%unless order.quotes_submitted_by_id.nil? %>
                                <th class="border border-gray-300 px-2 py-1">Selected</th>
                            <% end %>
                        </tr>
                    </thead>
                    <tbody>
                        <% items = order.approved ? quote.items.where(selected: true).order(:id) : quote.items.order(:id)  %>
                        <% items.each do |item| %>
                            <tr>
                                <td class="border border-gray-300 px-2 py-1"><%= item.item_name %></td>
                                <td class="border border-gray-300 px-2 py-1"><%= number_to_currency(item.price, unit: currency_symbol_for(item.currency)) %></td>
                                <td class="border border-gray-300 px-2 py-1 price-cell"  data-price="<%= item.price %>" data-currency="<%= item.currency %>">
                                    <%= number_to_currency(item.price, unit: item.currency) %>
                                </td>
                                <% unless order.approved == "approved" %>
                                    <td class="border border-gray-300 px-2 py-1">
                                        <% if item.recommended %>
                                            <%= button_to "✓", unrecommend_order_quote_item_path(@order, quote, item), method: :patch, class: "text-green-600" %>
                                        <% else %>
                                            <%= button_to "☐", recommend_order_quote_item_path(@order, quote, item), method: :patch, class: "text-gray-600" %>
                                        <% end %>
                                    </td>
                                <% end %>
                                <%unless order.quotes_submitted_by_id.nil? %>
                                    <td class="border border-gray-300 px-2 py-1">
                                        <% if item.selected %>
                                            <%= button_to "✓", unselect_order_quote_item_path(@order, quote, item), method: :patch, class: "text-green-600" %>
                                        <% else %>
                                            <%= button_to "☐", select_order_quote_item_path(@order, quote, item), method: :patch, class: "text-gray-600" %>
                                        <% end %>
                                    </td>
                                <% end %>
                            </tr>
                        <% end %>
                    </tbody>
                    </table>
                <% else %>
                    <p>No items added yet.</p>
                <% end %>
            </div>
            <% end %>
            <% end %>
        </div>
        <div class="flex items-center justify-start gap-x-4 mt-4">
            <% if order.quotes_submitted_by_id.nil? %>
                <%= button_to "Add Quote", new_order_quote_path(@order), method: :get, class: "bg-green-500 text-white px-3 py-1 mt-4 rounded" %>
            <% end %>
            <% if order.quotes.any? && order.quotes_submitted_by_id.nil? %>
                <%= button_to "Submit Quotes", submit_quote_order_path(@order), method: :patch, class: "bg-blue-500 text-white px-3 py-1 mt-4 rounded ml-4" %>
            <% end %>
        </div>
        <% unless order.quotes_submitted_by_id.nil? %>
            <% if order.approved.nil? || order.approved == "revised" %>
                <div class="flex items-center justify-start gap-x-4 mt-4">
                    <%= button_to "Approve Order", approve_order_path(@order), method: :patch, class: "bg-green-500 text-white px-3 py-1 mt-4 rounded" %>
                    <%= button_to "Revise Order", revise_order_path(@order), method: :patch, class: "bg-blue-500 text-white px-3 py-1 mt-4 rounded" %>
                    <%= button_to "Deny Order", deny_order_path(@order), method: :patch, class: "bg-red-500 text-white px-3 py-1 mt-4 rounded" %>
                </div>
            <% elsif order.approved != "denied" %>
                <% if order.payments.any? %>
                    <h1 class="font-semibold text-lg mt-6">Payments</h1>
                    <div class="flex flex-wrap gap-4 mt-4 mb-4">
                    <% order.payments.each do |payment| %>
                        <div class="border border-gray-300 rounded-lg p-5">
                            <p>
                                <strong>Company:</strong>
                                <%= payment.company %>
                            </p>
                            <p>
                                <strong>Bank:</strong>
                                <%= payment.bank %>
                            </p>
                            <p>
                                <strong>Account:</strong>
                                <%= payment.account %>
                            </p>
                            <p>
                                <strong>Paid by:</strong>
                                <%= payment.paid_by.email.split("@").first %>
                            </p>
                            <p>
                                <strong>Paid from:</strong>
                                <%= payment.from_account %>
                            </p>
                            <p>
                                <strong>Amount:</strong>
                                <%=  number_to_currency(payment.amount, unit: currency_symbol_for(payment.currency)) %>
                            </p>
                            <p>
                                <strong>Notes:</strong>
                                <div class="border-1 border-black rounded-lg p-2 my-2 inline-block">
                                    <%= payment.body %>
                                </div>
                            </p>
                        </div>
                    <% end %>
                    </div>
                <% end %>
                <%= link_to "Add Proof of Payment", new_order_payment_path(@order), class: "bg-green-500 text-white px-3 py-1 mt-4 rounded" %>
                
                <% if order.delivery_notes.any? %>
                    <h1 class="font-semibold text-lg mt-6">Delivery notes</h1>
                    <div class="flex flex-wrap gap-4 mt-4 mb-4">
                    <% order.delivery_notes.each do |delivery_note| %>
                        <div class="border border-gray-300 rounded-lg p-5">
                            <p>
                                <strong>received by:</strong>
                                <%= delivery_note.recieved_by.email.split("@").first %>
                                <strong>at:</strong>
                                <%= delivery_note.created_at.strftime("%d/%m/%Y %H:%M") %>
                            </p>
                            <p>
                                <strong>Company: </strong>
                                <%= delivery_note.company %>
                            </p>
                            <p>
                                <strong>Notes:</strong>
                                <div class="border-1 border-black rounded-lg p-2 my-2 inline-block">
                                    <%= delivery_note.body %>
                                </div>
                            </p>
                            <p>
                                <%= link_to "Go to Goods Receiving Voucher", order_delivery_note_path(order, delivery_note), class: "bg-blue-500 text-white px-3 py-1 mt-4 rounded" %>
                            </p>
                        </div>
                    <% end %>
                    </div>
                <% end %>
                <%= link_to "Add Goods Recieving Voucher", new_order_delivery_note_path(@order), class: "bg-green-500 text-white px-3 py-1 mt-4 rounded" %>

            <% end %>

            <% if order.approved == "denied" %>
                <%= button_to "Restore Order", restore_order_path(@order), method: :patch, class: "bg-blue-500 text-white px-3 py-1 mt-4 rounded" %>
            <% end %>
            
        <% end %>
    <% end %>

</div>
<div class="border-b border-gray-200 py-3">
<h1 class="text-xl font-bold">Comments</h1>
    <div>
        <%= form_with(model: Comment.new, url: order_comments_path(@order), local: true) do |f| %>
            <div class="border-1 border-black rounded-lg p-3 mb-4">
                <%= f.rich_text_area :body, class: "border rounded p-2 w-full" %>
                <%= f.submit "Create Comment", class: "bg-green-500 text-white px-3 py-1 mt-1 rounded" %>
            </div>
        <% end %>
    </div>
    <% if order.comments.any? %>
        <div class="mt-2 mb-4">
        <% order.comments.each do |comment| %>
            <div class="border border-gray-300 rounded-lg p-5 mb-2">
                <p>
                    <strong>
                    <%= comment.user.email.split("@").first %>
                    </strong>
                    at:
                    <%= comment.created_at.strftime("%d/%m/%Y %H:%M") %>
                </p>
                <p>
                    <%= comment.body %>
                </p>
            </div>
        <% end %>
    <% else %>
        <p> no comments yet </p>
    <% end %>
</div>

<script>
window.exchangeRates = <%= Rails.cache.read('latest_exchange_rates').to_json.html_safe %> || {};
console.log("Exchange rates:", window.exchangeRates);

document.querySelectorAll('.currency-select').forEach(currencySelect => {
  currencySelect.addEventListener('change', (event) => {
    const selectedCurrency = event.target.value;
    const exchangeRates = window.exchangeRates || {};
    const priceCells = currencySelect.closest('table').querySelectorAll('.price-cell');

    priceCells.forEach(cell => {
      const originalPrice = parseFloat(cell.dataset.price);
      const originalCurrency = cell.dataset.currency;

      if (isNaN(originalPrice) || !exchangeRates[selectedCurrency] || !exchangeRates[originalCurrency]) return;

      const rate = exchangeRates[selectedCurrency] / exchangeRates[originalCurrency];
      const convertedPrice = originalPrice * rate;

      cell.textContent = new Intl.NumberFormat('en-US', { style: 'currency', currency: selectedCurrency }).format(convertedPrice);
    });
  });
});

</script>